<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <!-- GAV -->
  <groupId>org.gladiator</groupId>
  <artifactId>JMessenger</artifactId>
  <version>0.0.4-SNAPSHOT</version>

  <!-- Maven Properties -->
  <modelVersion>4.0.0</modelVersion>
  <packaging>jar</packaging>

  <!-- Organization Properties -->
  <inceptionYear>2025</inceptionYear>
  <organization>
    <name>org.gladiator</name>
  </organization>
  <description>Robust and efficient chatUtils designed for terminal-based communication
  </description>

  <properties>
    <!-- Maven Section -->
    <maven.compiler.release>21</maven.compiler.release>
    <sourceDirectory>src/main/java</sourceDirectory>

    <!--  Project Section  -->
    <project.artifacts.directory>${project.build.directory}/artifacts</project.artifacts.directory>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.main.client>${project.groupId}.app.client.ClientMain</project.main.client>
    <project.main.server>${project.groupId}.app.server.ServerMain</project.main.server>

    <!--  Native Section  -->
    <native.pgo.directory>src/assets/pgo</native.pgo.directory>
    <native.pgo.server.directory>${native.pgo.directory}/server</native.pgo.server.directory>
    <native.pgo.client.directory>${native.pgo.directory}/client</native.pgo.client.directory>
    <native.build.args/>
    <native.pgo.server.args/>
    <native.pgo.client.args/>

    <!-- Dependencies Section -->
    <dependency.jline.bundle.version>3.29.0</dependency.jline.bundle.version>
    <dependency.logback.bundle.version>1.5.16</dependency.logback.bundle.version>
    <dependency.commons.lang.version>3.17.0</dependency.commons.lang.version>
    <dependency.porter.version>1.0.2</dependency.porter.version>
    <dependency.slf4j.version>2.0.16</dependency.slf4j.version>
    <dependency.nullable.version>3.0.2</dependency.nullable.version>

    <!-- Plugins Section -->
    <plugin.native.maven>0.10.4</plugin.native.maven>
    <plugin.maven.compiler>3.11.0</plugin.maven.compiler>
    <plugin.errorprone>2.36.0</plugin.errorprone>
    <plugin.nullaway>0.10.15</plugin.nullaway>
    <plugin.checkstyle>3.6.0</plugin.checkstyle>
    <plugin.spotbugs>4.8.6.6</plugin.spotbugs>
    <plugin.conventional.changelog>2.2.0</plugin.conventional.changelog>
    <plugin.maven.shade>3.6.0</plugin.maven.shade>
    <plugin.exec.maven>3.5.0</plugin.exec.maven>

    <!-- Skip Plugins Section -->
    <skip.native.build>true</skip.native.build>
    <skip.errorprone>false</skip.errorprone>
    <skip.checkstyle>false</skip.checkstyle>
    <skip.jar.build>false</skip.jar.build>
    <skip.artifacts.hashing>false</skip.artifacts.hashing>
  </properties>

  <build>
    <plugins>
      <!-- ErrorProne and NullAway -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${plugin.maven.compiler}</version>
        <configuration>
          <skip>${skip.errorprone}</skip>
          <compilerArgs>
            <arg>-XDcompilePolicy=simple</arg>
            <arg>--should-stop=ifError=FLOW</arg>
            <arg>-Xplugin:ErrorProne -XepOpt:NullAway:AnnotatedPackages=org.gladiator.app</arg>
          </compilerArgs>
          <annotationProcessorPaths>
            <path>
              <groupId>com.google.errorprone</groupId>
              <artifactId>error_prone_core</artifactId>
              <version>${plugin.errorprone}</version>
            </path>
            <path>
              <groupId>com.uber.nullaway</groupId>
              <artifactId>nullaway</artifactId>
              <version>${plugin.nullaway}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <!-- Check Code Style-->
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
        <version>${plugin.checkstyle}</version>
        <configuration>
          <skip>${skip.checkstyle}</skip>
          <configLocation>google_checks.xml</configLocation>
          <failsOnError>true</failsOnError>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <id>validate</id>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>
      <!-- Spot Bugs-->
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${plugin.spotbugs}</version>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>
      <!-- Create CHANGELOG based on Git Conventional Commits-->
      <plugin>
        <groupId>se.bjurr.gitchangelog</groupId>
        <artifactId>git-changelog-maven-plugin</artifactId>
        <version>${plugin.conventional.changelog}</version>
        <executions>
          <execution>
            <id>GenerateGitChangelog</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>git-changelog</goal>
            </goals>
            <configuration>
              <file>CHANGELOG.MD</file>
              <templateContent>
                <![CDATA[
# Changelog

{{#tags}}
{{#ifReleaseTag .}}
## [{{name}}](https://github.com/FelipeKobra/JMessenger/commits/{{name}}) ({{tagDate .}})

  {{#ifContainsType commits type='feat'}}
### Features

    {{#commits}}
      {{#ifCommitType . type='feat'}}
 - {{#eachCommitScope .}} **{{.}}** {{/eachCommitScope}} {{{commitDescription .}}} ([{{hash}}](https://github.com/FelipeKobra/JMessenger/commits/{{hashFull}}))
      {{/ifCommitType}}
    {{/commits}}
  {{/ifContainsType}}

  {{#ifContainsType commits type='fix'}}
### Bug Fixes

    {{#commits}}
      {{#ifCommitType . type='fix'}}
 - {{#eachCommitScope .}} **{{.}}** {{/eachCommitScope}} {{{commitDescription .}}} ([{{hash}}](https://github.com/FelipeKobra/JMessenger/commits/{{hashFull}}))
      {{/ifCommitType}}
    {{/commits}}
  {{/ifContainsType}}

{{/ifReleaseTag}}
{{/tags}}
]]>
              </templateContent>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Create Application Jars -->
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
        <version>${plugin.maven.shade}</version>
        <configuration>
          <skip>${skip.jar.build}</skip>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>**/META-INF/native-image/**</exclude>
                <exclude>**/scripts/**</exclude>
                <exclude>**/images/**</exclude>
                <exclude>**/*.md</exclude>
                <exclude>**/*.markdown</exclude>
                <exclude>**/*.header</exclude>
                <exclude>**/pom.properties</exclude>
                <exclude>**/io.netty.versions.properties</exclude>
                <exclude>**/*.args</exclude>
                <exclude>**/*.so</exclude>
                <exclude>module-info.class</exclude>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
                <exclude>META-INF/LICENSE.txt</exclude>
                <exclude>META-INF/MANIFEST.MF</exclude>
                <exclude>META-INF/versions/9/module-info.class</exclude>
                <exclude>META-INF/module-info.class</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
        <executions>
          <!-- Server JAR-->
          <execution>
            <configuration>
              <finalName>Server</finalName>
              <outputDirectory>${project.artifacts.directory}</outputDirectory>
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${project.main.server}</mainClass>
                </transformer>
              </transformers>
            </configuration>
            <goals>
              <goal>shade</goal>
            </goals>
            <id>shade-server-main</id>
            <phase>package</phase>
          </execution>
          <!-- Client JAR-->
          <execution>
            <configuration>
              <finalName>Client</finalName>
              <outputDirectory>${project.artifacts.directory}</outputDirectory>
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${project.main.client}</mainClass>
                </transformer>
              </transformers>
            </configuration>
            <goals>
              <goal>shade</goal>
            </goals>
            <id>shade-client-main</id>
            <phase>package</phase>
          </execution>
        </executions>
      </plugin>
      <!-- Create Windows Native Images -->
      <plugin>
        <artifactId>native-maven-plugin</artifactId>
        <groupId>org.graalvm.buildtools</groupId>
        <version>${plugin.native.maven}</version>
        <configuration>
          <outputDirectory>${project.artifacts.directory}</outputDirectory>
          <skip>${skip.native.build}</skip>
        </configuration>
        <executions>
          <!-- Server EXE -->
          <execution>
            <configuration>
              <buildArgs>
                ${native.build.args}
                ${native.pgo.server.args}
              </buildArgs>
              <imageName>Server</imageName>
              <mainClass>${project.main.server}</mainClass>
            </configuration>
            <goals>
              <goal>compile-no-fork</goal>
            </goals>
            <id>build-native-server</id>
            <phase>package</phase>
          </execution>
          <!-- Client EXE -->
          <execution>
            <configuration>
              <buildArgs>
                ${native.build.args}
                ${native.pgo.client.args}
              </buildArgs>
              <imageName>Client</imageName>
              <mainClass>${project.main.client}</mainClass>
            </configuration>
            <goals>
              <goal>compile-no-fork</goal>
            </goals>
            <id>build-native-client</id>
            <phase>package</phase>
          </execution>
        </executions>
      </plugin>
      <!-- Artifacts SHA-256 Hashes -->
      <plugin>
        <artifactId>exec-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
        <version>${plugin.exec.maven}</version>
        <executions>
          <execution>
            <configuration>
              <arguments>
                <argument>-NoProfile</argument>
                <argument>-Command</argument>
                <argument>
                  &quot;src/main/resources/scripts/artifacts-hashing.ps1&quot;
                </argument>
              </arguments>
              <executable>powershell</executable>
            </configuration>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>

  </build>

  <dependencies>
    <!-- General Section -->
    <dependency>
      <artifactId>commons-lang3</artifactId>
      <groupId>org.apache.commons</groupId>
      <version>${dependency.commons.lang.version}</version>
    </dependency>
    <!-- Add Null Annotations-->
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>${dependency.nullable.version}</version>
    </dependency>
    <!-- Networking Section -->
    <dependency>
      <artifactId>porter</artifactId>
      <groupId>com.sshtools</groupId>
      <version>${dependency.porter.version}</version>
    </dependency>
    <!-- Terminal Section -->
    <dependency>
      <artifactId>jline-terminal-jni</artifactId>
      <groupId>org.jline</groupId>
      <version>${dependency.jline.bundle.version}</version>
    </dependency>
    <dependency>
      <artifactId>jline-console</artifactId>
      <groupId>org.jline</groupId>
      <version>${dependency.jline.bundle.version}</version>
    </dependency>
    <!-- Logging Section -->
    <dependency>
      <artifactId>slf4j-api</artifactId>
      <groupId>org.slf4j</groupId>
      <version>${dependency.slf4j.version}</version>
    </dependency>
    <dependency>
      <artifactId>logback-core</artifactId>
      <groupId>ch.qos.logback</groupId>
      <version>${dependency.logback.bundle.version}</version>
    </dependency>
    <dependency>
      <artifactId>logback-classic</artifactId>
      <groupId>ch.qos.logback</groupId>
      <version>${dependency.logback.bundle.version}</version>
    </dependency>
  </dependencies>

  <!-- Native Image Build Profiles -->
  <profiles>
    <!-- Profile for fast building during development-->
    <profile>
      <id>native-dev</id>
      <properties>
        <native.build.args>-Ob</native.build.args>
        <skip.native.build>false</skip.native.build>
      </properties>
    </profile>
    <!-- Creates an optimized application without PGO Optimization-->
    <profile>
      <id>native-prod</id>
      <properties>
        <native.build.args>-O3</native.build.args>
        <skip.native.build>false</skip.native.build>
      </properties>
    </profile>
    <!-- Uses the PGO Profiles made by the PGO Artifacts to optimize the application -->
    <profile>
      <id>native-prod-pgo</id>
      <properties>
        <skip.native.build>false</skip.native.build>
        <native.pgo.client.args>--pgo=${native.pgo.client.directory}/default.iprof
        </native.pgo.client.args>
        <native.pgo.server.args>--pgo=${native.pgo.server.directory}/default.iprof
        </native.pgo.server.args>
      </properties>
    </profile>
    <!-- Creates the PGO Artifacts-->
    <profile>
      <id>native-pgo-build</id>
      <properties>
        <skip.native.build>false</skip.native.build>
        <native.pgo.client.args>--pgo-instrument
          -o ${native.pgo.client.directory}/Client-PGO
        </native.pgo.client.args>
        <native.pgo.server.args>--pgo-instrument
          -o ${native.pgo.server.directory}/Server-PGO
        </native.pgo.server.args>
      </properties>
    </profile>
  </profiles>

  <scm>
    <connection>scm:git:https://github.com/FelipeKobra/JMessenger.git</connection>
    <developerConnection>scm:git:https://github.com/FelipeKobra/JMessenger.git</developerConnection>
    <url>https://github.com/FelipeKobra/JMessenger</url>
  </scm>

</project>